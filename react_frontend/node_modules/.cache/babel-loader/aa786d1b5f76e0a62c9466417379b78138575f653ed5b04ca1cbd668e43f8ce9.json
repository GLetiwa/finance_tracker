{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./styles.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Transactions=_ref=>{let{transactions}=_ref;const[newTransaction,setNewTransaction]=useState({Category:'',Amount:0,Description:''});const handleInputChange=e=>{const{name,value}=e.target;setNewTransaction({...newTransaction,[name]:value});};const handleSubmit=async e=>{e.preventDefault();try{const response=await fetch('http://localhost:5000/transactions',{method:'POST',headers:{'Content-Type':'application/json'},credentials:'include',body:JSON.stringify(newTransaction)});const responseText=await response.text();console.log('Response Text:',responseText);const responseData=await response.json();console.log('Response Data:',responseData);if(response.ok){const addedTransaction=await response.json();setNewTransaction({Category:'',Amount:0,Description:''});setNewTransaction([...transactions,addedTransaction]);console.log('Transaction successfully added!');}else{console.error('Failed to add transaction');}}catch(error){console.error('Error adding transaction:',error);}};const handleUpdate=async transactionId=>{try{const response=await fetch(\"http://localhost:5000/transactions/\".concat(transactionId),{method:'PUT',headers:{'Content-Type':'application/json'},credentials:'include',body:JSON.stringify(newTransaction)});if(response.ok){const updatedTransaction=await response.json();const updatedTransactions=transactions.map(t=>t.TransactionID===transactionId?updatedTransaction:t);setNewTransaction(updatedTransactions);console.log('Transaction updated successfully!');}else{console.error('Failed to update transaction');}}catch(error){console.error('Error updating transaction:',error);}};const handleDelete=async transactionId=>{try{const response=await fetch(\"http://localhost:5000/transactions/\".concat(transactionId),{method:'DELETE',credentials:'include'});if(response.ok){const updatedTransactions=transactions.filter(t=>t.TransactionID!==transactionId);setNewTransaction(updatedTransactions);console.log('Transaction deleted successfully!');}else{console.error('Failed to delete transaction');}}catch(error){console.error('Error deleting transaction:',error);}};useEffect(()=>{fetch('http://localhost:5000/transactions').then(response=>response.json()).then(data=>{// Transform each Transaction to a serializable format\nconst formattedTransactions=data.map(transaction=>({Category:transaction.Category,Amount:transaction.Amount,Description:transaction.Description,TransactionID:transaction.TransactionID}));setNewTransaction(formattedTransactions);}).catch(error=>console.error('Error fetching transactions:',error));},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Transactions\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"transaction-form\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Category:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"Category\",value:newTransaction.Category,onChange:handleInputChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Amount:\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"Amount\",value:newTransaction.Amount,onChange:handleInputChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Description:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"Description\",value:newTransaction.Description,onChange:handleInputChange})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Transaction\"})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"transaction-list\",children:transactions.map(transaction=>/*#__PURE__*/_jsxs(\"li\",{className:\"transaction-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:transaction.Category}),\" - \",transaction.Amount,\" USD\",/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleUpdate(transaction.TransactionID),children:\"Update\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDelete(transaction.TransactionID),children:\"Delete\"})]},transaction.TransactionID))})]});};export default Transactions;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Transactions","_ref","transactions","newTransaction","setNewTransaction","Category","Amount","Description","handleInputChange","e","name","value","target","handleSubmit","preventDefault","response","fetch","method","headers","credentials","body","JSON","stringify","responseText","text","console","log","responseData","json","ok","addedTransaction","error","handleUpdate","transactionId","concat","updatedTransaction","updatedTransactions","map","t","TransactionID","handleDelete","filter","then","data","formattedTransactions","transaction","catch","className","children","onSubmit","type","onChange","onClick"],"sources":["/home/grace/projects/maya_prac/alx_project1/finance_tracker/react_frontend/src/components/Transactions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './styles.css';\n\nconst Transactions = ({ transactions }) => {\n  const [newTransaction, setNewTransaction] = useState({\n    Category: '',\n    Amount: 0,\n    Description: '',\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewTransaction({ ...newTransaction, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n        try {\n\tconst response = await fetch('http://localhost:5000/transactions', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tcredentials: 'include',\n\t\tbody: JSON.stringify(newTransaction),\n\t});\n\tconst responseText = await response.text();\n        console.log('Response Text:', responseText);\n\n\tconst responseData = await response.json();\n        console.log('Response Data:', responseData);\n\tif (response.ok) {\n\t  const addedTransaction = await response.json()\n\t  setNewTransaction({\n\t    Category: '',\n      Amount: 0,\n\t    Description: '',\n\t  });\n\t  setNewTransaction([...transactions, addedTransaction]);\n\t  console.log('Transaction successfully added!');\n\t} else {\n\t\tconsole.error('Failed to add transaction');\n\t}\n    } catch (error) {\n\t    console.error('Error adding transaction:', error);\n    }\n  };\n\n  const handleUpdate = async (transactionId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/transactions/${transactionId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(newTransaction),\n      });\n\n      if (response.ok) {\n        const updatedTransaction = await response.json();\n        const updatedTransactions = transactions.map((t) =>\n          t.TransactionID === transactionId ? updatedTransaction : t\n        );\n        setNewTransaction(updatedTransactions);\n        console.log('Transaction updated successfully!');\n      } else {\n        console.error('Failed to update transaction');\n      }\n    } catch (error) {\n      console.error('Error updating transaction:', error);\n    }\n  };\n\n  const handleDelete = async (transactionId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/transactions/${transactionId}`, {\n        method: 'DELETE',\n        credentials: 'include',\n      });\n\n      if (response.ok) {\n        const updatedTransactions = transactions.filter((t) => t.TransactionID !== transactionId);\n        setNewTransaction(updatedTransactions);\n        console.log('Transaction deleted successfully!');\n      } else {\n        console.error('Failed to delete transaction');\n      }\n    } catch (error) {\n      console.error('Error deleting transaction:', error);\n    }\n  };\n\n\n  useEffect(() => {\n  fetch('http://localhost:5000/transactions')\n    .then(response => response.json())\n    .then(data => {\n      // Transform each Transaction to a serializable format\n      const formattedTransactions = data.map(transaction => ({\n        Category: transaction.Category,\n        Amount: transaction.Amount,\n        Description: transaction.Description,\n        TransactionID: transaction.TransactionID,\n      }));\n      setNewTransaction(formattedTransactions);\n    })\n    .catch(error => console.error('Error fetching transactions:', error));\n}, []);\n  return (\n    <div className=\"section\">\n      <h2>Transactions</h2>\n      <form onSubmit={handleSubmit} className=\"transaction-form\">\n        <label>\n          Category:\n          <input\n            type=\"text\"\n            name=\"Category\"\n            value={newTransaction.Category}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          Amount:\n          <input\n            type=\"number\"\n            name=\"Amount\"\n            value={newTransaction.Amount}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          Description:\n          <input\n            type=\"text\"\n            name=\"Description\"\n            value={newTransaction.Description}\n            onChange={handleInputChange}\n          />\n        </label>\n        <button type=\"submit\">Add Transaction</button>\n      </form>\n      <ul className=\"transaction-list\">\n        {transactions.map((transaction) => (\n          <li key={transaction.TransactionID} className=\"transaction-item\">\n            <strong>{transaction.Category}</strong> - {transaction.Amount} USD\n            <button onClick={() => handleUpdate(transaction.TransactionID)}>Update</button>\n            <button onClick={() => handleDelete(transaction.TransactionID)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Transactions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
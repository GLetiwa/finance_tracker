{"ast":null,"code":"var _jsxFileName = \"/home/grace/projects/maya_prac/alx_project1/finance_tracker/react_frontend/src/components/Transactions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transactions = ({\n  transactions\n}) => {\n  _s();\n  const [newTransaction, setNewTransaction] = useState({\n    Category: '',\n    Amount: 0,\n    Description: '',\n    TransactionID: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTransaction({\n      ...newTransaction,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/transactions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(newTransaction)\n      });\n      const responseText = await response.text();\n      console.log('Response Text:', responseText);\n      const responseData = await response.json();\n      console.log('Response Data:', responseData);\n      if (response.ok) {\n        const addedTransaction = await response.json();\n        setNewTransaction([...transactions, addedTransaction]);\n        console.log('Transaction successfully added!');\n      } else {\n        console.error('Failed to add transaction');\n      }\n    } catch (error) {\n      console.error('Error adding transaction:', error);\n    }\n  };\n  const handleUpdate = async transactionId => {\n    try {\n      const response = await fetch(`http://localhost:5000/transactions/${transactionId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(newTransaction)\n      });\n      if (response.ok) {\n        const updatedTransaction = await response.json();\n        const updatedTransactions = transactions.map(t => t.TransactionID === transactionId ? updatedTransaction : t);\n        setNewTransaction(updatedTransactions);\n        console.log('Transaction updated successfully!');\n      } else {\n        console.error('Failed to update transaction');\n      }\n    } catch (error) {\n      console.error('Error updating transaction:', error);\n    }\n  };\n  const handleDelete = async transactionId => {\n    try {\n      const response = await fetch(`http://localhost:5000/transactions/${transactionId}`, {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const updatedTransactions = transactions.filter(t => t.TransactionID !== transactionId);\n        setNewTransaction(updatedTransactions);\n        console.log('Transaction deleted successfully!');\n      } else {\n        console.error('Failed to delete transaction');\n      }\n    } catch (error) {\n      console.error('Error deleting transaction:', error);\n    }\n  };\n  useEffect(() => {\n    fetch('http://localhost:5000/transactions').then(response => response.json()).then(data => {\n      // Transform each Transaction to a serializable format\n      const formattedTransactions = data.map(transaction => ({\n        Category: transaction.Category,\n        Amount: transaction.Amount,\n        Description: transaction.Description,\n        TransactionID: transaction.TransactionID\n      }));\n      setNewTransaction(formattedTransactions);\n    }).catch(error => console.error('Error fetching transactions:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"transaction-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Category:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Category\",\n          value: newTransaction.Category,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"Amount\",\n          value: newTransaction.Amount,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Description\",\n          value: newTransaction.Description,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"transaction-list\",\n      children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"transaction-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: transaction.Category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), \" - \", transaction.Amount, \" USD\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdate(transaction.TransactionID),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(transaction.TransactionID),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, transaction.TransactionID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Transactions, \"yn72+KAl1iVUyxCgmrBCU3ta/08=\");\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Transactions","transactions","_s","newTransaction","setNewTransaction","Category","Amount","Description","TransactionID","handleInputChange","e","name","value","target","handleSubmit","preventDefault","response","fetch","method","headers","credentials","body","JSON","stringify","responseText","text","console","log","responseData","json","ok","addedTransaction","error","handleUpdate","transactionId","updatedTransaction","updatedTransactions","map","t","handleDelete","filter","then","data","formattedTransactions","transaction","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/grace/projects/maya_prac/alx_project1/finance_tracker/react_frontend/src/components/Transactions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './styles.css';\n\nconst Transactions = ({ transactions }) => {\n  const [newTransaction, setNewTransaction] = useState({\n    Category: '',\n    Amount: 0,\n    Description: '',\n    TransactionID: ''\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewTransaction({ ...newTransaction, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n        try {\n\t  const response = await fetch('http://localhost:5000/transactions', {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tcredentials: 'include',\n\t\tbody: JSON.stringify(newTransaction),\n\t});\n\tconst responseText = await response.text();\n        console.log('Response Text:', responseText);\n\n\tconst responseData = await response.json();\n        console.log('Response Data:', responseData);\n        if (response.ok) {\n          const addedTransaction = await response.json();\n          setNewTransaction([...transactions, addedTransaction]);\n          console.log('Transaction successfully added!');\n        }\n         else {\n\t\tconsole.error('Failed to add transaction');\n\t}\n    } catch (error) {\n\t    console.error('Error adding transaction:', error);\n    }\n  };\n\n  const handleUpdate = async (transactionId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/transactions/${transactionId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(newTransaction),\n      });\n\n      if (response.ok) {\n        const updatedTransaction = await response.json();\n        const updatedTransactions = transactions.map((t) =>\n          t.TransactionID === transactionId ? updatedTransaction : t\n        );\n        setNewTransaction(updatedTransactions);\n        console.log('Transaction updated successfully!');\n      } else {\n        console.error('Failed to update transaction');\n      }\n    } catch (error) {\n      console.error('Error updating transaction:', error);\n    }\n  };\n\n  const handleDelete = async (transactionId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/transactions/${transactionId}`, {\n        method: 'DELETE',\n        credentials: 'include',\n      });\n\n      if (response.ok) {\n        const updatedTransactions = transactions.filter((t) => t.TransactionID !== transactionId);\n        setNewTransaction(updatedTransactions);\n        console.log('Transaction deleted successfully!');\n      } else {\n        console.error('Failed to delete transaction');\n      }\n    } catch (error) {\n      console.error('Error deleting transaction:', error);\n    }\n  };\n\n\n  useEffect(() => {\n  fetch('http://localhost:5000/transactions')\n    .then(response => response.json())\n    .then(data => {\n      // Transform each Transaction to a serializable format\n      const formattedTransactions = data.map(transaction => ({\n        Category: transaction.Category,\n        Amount: transaction.Amount,\n        Description: transaction.Description,\n        TransactionID: transaction.TransactionID,\n      }));\n      setNewTransaction(formattedTransactions);\n    })\n    .catch(error => console.error('Error fetching transactions:', error));\n}, []);\n  return (\n    <div className=\"section\">\n      <h2>Transactions</h2>\n      <form onSubmit={handleSubmit} className=\"transaction-form\">\n        <label>\n          Category:\n          <input\n            type=\"text\"\n            name=\"Category\"\n            value={newTransaction.Category}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          Amount:\n          <input\n            type=\"number\"\n            name=\"Amount\"\n            value={newTransaction.Amount}\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          Description:\n          <input\n            type=\"text\"\n            name=\"Description\"\n            value={newTransaction.Description}\n            onChange={handleInputChange}\n          />\n        </label>\n        <button type=\"submit\">Add Transaction</button>\n      </form>\n      <ul className=\"transaction-list\">\n        {transactions.map((transaction) => (\n          <li key={transaction.TransactionID} className=\"transaction-item\">\n            <strong>{transaction.Category}</strong> - {transaction.Amount} USD\n            <button onClick={() => handleUpdate(transaction.TransactionID)}>Update</button>\n            <button onClick={() => handleDelete(transaction.TransactionID)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Transactions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}